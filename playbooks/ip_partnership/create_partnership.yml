- name: Using the IBM Spectrum Virtualize collection to create IP Partnership on both clusers, check state is fully configured.
  hosts: localhost
  collections:
    - ibm.spectrum_virtualize
  gather_facts: no
  connection: local
  vars_files:
    - ip_partnership_vars.txt
  vars:
  tasks:
    - name: fetch portsetnames from given ips on cluster1
      register: results
      ibm_svcinfo_command:
        command: "svcinfo lsip"
        clustername: "{{ primary_cluster_name }}"
        username: "{{ primary_cluster_username }}"
        password: "{{ primary_cluster_password }}"
        log_path: "{{ log_path | default('/tmp/playbook.debug') }}"
    - name: show parnership status
      set_fact:
        info: "{{ (results['stdout']) }}"
    - name: print first portset
      set_fact:
        portsetname1: "{{item['portset_name'] | default('portset1_name')}}"
      when: primary_link1_ip in item['IP_address']
      loop: "{{info}}"
    - name: print portset1 for primary
      debug:
        msg: Found {{ portsetname1 }}
    - name: print second portset
      set_fact:
        portsetname2: "{{item['portset_name'] | default('portset2_name')}}"
      when: primary_link2_ip in item['IP_address']
      loop: "{{info}}"
    - name: print portset2 for primary
      debug:
        msg: Found {{ portsetname2 }}
    - name: fetch portsetnames from given ips on cluster2
      register: results
      ibm_svcinfo_command:
        command: "svcinfo lsip"
        clustername: "{{ secondary_cluster_name }}"
        username: "{{ secondary_cluster_username }}"
        password: "{{ secondary_cluster_password }}"
        log_path: "{{ log_path | default('/tmp/playbook.debug') }}"
    - name: show parnership status
      set_fact:
        info: "{{ (results['stdout']) }}"
    - name: print first portset
      set_fact:
        remoteportsetname1: "{{item['portset_name'] | default('remoteportset1_name')}}"
      when: secondary_link1_ip in item['IP_address']
      loop: "{{info}}"
    - name: print portset1 for auxiliary
      debug:
        msg: Found {{ remoteportsetname1 }}
    - name: print second portset
      set_fact:
        remoteportsetname2: "{{item['portset_name'] | default('remoteportset2_name')}}"
      when: secondary_link2_ip in item['IP_address']
      loop: "{{info}}"
    - name: print portset2 for auxiliary
      debug:
        msg: Found {{ remoteportsetname2 }}
    - name: Create new IP Partnership between clusters
      ibm_sv_manage_ip_partnership:
        clustername: "{{ primary_cluster_name }}"
        username: "{{ primary_cluster_username }}"
        password: "{{ primary_cluster_password }}"
        log_path: "{{ log_path | default('/tmp/playbook.debug') }}"
        remote_clustername: "{{ secondary_cluster_name }}"
        remote_username: "{{ secondary_cluster_username }}"
        remote_password: "{{ secondary_cluster_password }}"
        remote_clusterip: "{{ secondary_cluster_ip }}"
        type: "ipv4"
        linkbandwidthmbits: "{{ linkbandwidthmbits | default('100') }}"
        backgroundcopyrate: "{{ backgroundcopyrate | default('50') }}"
        compressed: "{{ compressed | default('no') }}"
        link1: "{{ portsetname1 }}"
        remote_link1: "{{ remoteportsetname1 }}"
        link2: "{{ portsetname2 }}"
        remote_link2: "{{ remoteportsetname2 }}"
        state: "present"
